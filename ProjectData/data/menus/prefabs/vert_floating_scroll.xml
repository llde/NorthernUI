<!-- vert_floating_scroll.xml -->
<!-- image name="vert_floating_scroll" -->
	<id>&generic;</id>		<!-- MUST change -->
	<locus>&true;</locus>
	<depth>1</depth>
	<filename></filename>
   <zoom>50</zoom> <!-- scrollbar size; 50 is the default; 25 is also an option -->
   
   <width><copy src="child(track)" trait="width" /></width>
	<height>400</height>		<!-- default, may change -- marks the distance between the two arrows, not including them -->
	<y> 0 </y>					<!-- default, may change -- marks the position of the bottom edge of the top arrow -->
	<x> 0 </x>					<!-- default, may change -->
	<user1>  0</user1> <!-- min range value -->
	<user2>100</user2> <!-- max range value -->
	<user3>  1</user3> <!-- step distance -->
	<user4> 10</user4> <!-- jump distance -->
	<user5>  0</user5> <!-- starting value -->
	<user6>&generic;</user6> <!-- marker's id -- must change to enable dragging -->
	<user7>						<!-- current value as ineger between min and max -->
		<copy src="child(vertical_scroll_marker)" trait="_value_scrolled_to"/>
	</user7>
	<user8>  5</user8>      <!-- How many items are visible at once -->
	<user10>&true;</user10> <!-- Should the scrollbar auto-hide when scrolling isn't possible? -->
	
	<_scrollable_range>
		<copy src="me()" trait="user2"/>
		<sub  src="me()" trait="user1"/>
		<max>0</max>
	</_scrollable_range>
	
	<!-- The scrollbar should only be visible if scrolling can be done -->
	<visible>
		<copy src="me()" trait="user2" />
		<add  src="me()" trait="user8" />
		<gt   src="me()" trait="user8" />
      <or>
         <not src="me()" trait="user10"/>
      </or>
	</visible>
	
   <!-- Hitboxes for clicking on the scrollbar track: -->
	<rect name="vertical_scroll_topside">
		<id>&generic;</id>
		<target>&true;</target>
		<depth>3</depth>
		<height> <!-- make it long enough to stretch from the top arrow to the marker -->
			<copy src="sibling(vertical_scroll_marker)" trait="y" />
		</height>
		<width><copy src="sibling(track)" trait="width" /></width>
		<x>0</x>
		<y>0</y>
		<clicksound>3</clicksound>
	</rect>
	<rect name="vertical_scroll_bottomside">
		<id>&generic;</id>
		<target>&true;</target>
		<depth>2</depth>
		<height>
			<copy src="parent()" trait="height"/>
			<sub  src="sibling(vertical_scroll_topside)" trait="height" />
			<sub  src="sibling(vertical_scroll_marker)"  trait="height" />
		</height>
		<width><copy src="sibling(track)" trait="width" /></width>
		<x>0</x>
		<y>
			<copy src="sibling(vertical_scroll_topside)" trait="height" />
			<add  src="sibling(vertical_scroll_marker)"  trait="height" />
		</y>
		<clicksound>3</clicksound>
	</rect>
	
   <!-- Scrollbar graphics: -->
	<image name="vertical_scroll_top">
		<id>&generic;</id>
		<target>&true;</target>
      <depth>4</depth>
      <zoom><copy src="parent()" trait="zoom" /></zoom>
      <filename>Menus\NorthernUI\scrollbars\hd_v_endcaps.dds</filename>
      <width><copy src="me()" trait="filewidth" /></width>
      <height>
         <copy src="me()" trait="fileheight" />
         <div>2</div>
      </height>
		<x>0</x>
		<y>
         <copy src="me()" trait="height" />
         <mult>-1</mult>
      </y>
		<clicksound>3</clicksound>
	</image>
	<image name="vertical_scroll_bottom">
		<id> &generic; </id>
		<target> &true; </target>
      <depth>4</depth>
      <zoom><copy src="parent()" trait="zoom" /></zoom>
      <filename>Menus\NorthernUI\scrollbars\hd_v_endcaps.dds</filename>
      <width><copy src="me()" trait="filewidth" /></width>
      <height>
         <copy src="me()" trait="fileheight" />
         <div>2</div>
      </height>
      <cropy><copy src="me()" trait="height" /></cropy>
		<x>0</x>
		<y><copy src="parent()" trait="height" /></y>
		<clicksound>3</clicksound>
	</image>
	<image name="track">
      <depth>1</depth>
      <zoom><copy src="parent()" trait="zoom" /></zoom>
      <filename>Menus\NorthernUI\scrollbars\hd_v_track.dds</filename>
      <width><copy src="me()" trait="filewidth" /></width>
      <height><copy src="parent()" trait="height" /></height>
		<x>0</x>
		<y>0</y>
      <tile>&true;</tile>
	</image>
	<image name="vertical_scroll_marker">
		<id><copy src="parent()" trait="user6"/></id>
		<target>&true;</target>
      <depth>6</depth>
      <zoom><copy src="parent()" trait="zoom" /></zoom>
      <filename>Menus\NorthernUI\scrollbars\hd_v_thumb.dds</filename>
      <width><copy src="me()" trait="filewidth" /></width>
      <height><copy src="me()" trait="fileheight" /></height>
		<x>0</x>
		<y> <!-- set my position relative to the current scroll -->
			<copy src="parent()" trait="height"/>
         <!-- == track length, so far -->
			<sub  src="me()"     trait="height"/>
			<mul>
				<copy src="me()"     trait="_value_scrolled_to"/>
				<sub  src="parent()" trait="user1"/>
				<div  src="parent()" trait="_scrollable_range"/>
			</mul>
		</y>
      
      <!--
         This code actually does compute the current scroll value, which is 
         copied by the parent scrollbar's USER7 trait and (presumably) read 
         by the executable. The executable "feeds" us inputs (see comment 
         on USER9) and we're responsible for maintaining our scroll value 
         ourselves.
      -->
		<_value_scrolled_to>
			<!-- copy old value -->
			<add>
				<copy src="sibling(vertical_scroll_bottom)" trait="clicked"/>
				<sub  src="sibling(vertical_scroll_top)"    trait="clicked"/>
				<mul  src="parent()" trait="user3" /> <!-- step distance -->
			</add>
			<add>
				<copy src="sibling(vertical_scroll_bottomside)" trait="clicked"/>
				<sub  src="sibling(vertical_scroll_topside)"    trait="clicked"/>
				<mul  src="parent()" trait="user4" />	<!-- jump distance -->
			</add>
			<add>
				<copy src="me()"     trait="user9" />
				<add  src="me()"     trait="user10" />
				<mul  src="parent()" trait="user3" /> <!-- step distance -->
			</add>
			<add src="parent()" trait="user5"/>
			<min>
				<copy src="parent()" trait="user2"/>
				<sub  src="parent()" trait="user1"/>
			</min>
			<max>0</max>
		</_value_scrolled_to>
		<user8>	<!-- for dragging - drag interval -->
			<copy src="parent()" trait="height" />
         <!-- == track length, so far -->
			<sub  src="me()"     trait="height" />
			<div  src="parent()" trait="_scrollable_range" />
		</user8>
		<user9> 0 </user9>	<!-- for dragging - lines dragged -->
		<user10> <copy src="parent()" trait="user9"/> </user10>
		<clicksound>3</clicksound>
	</image>
<!-- /image -->