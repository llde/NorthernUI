<!--<rect name="option_button">-->
   <!-- args -->
   <user1>&true;</user1> <!-- enabled -->
   <user10>200</user10> <!-- label column width -->
   <user11></user11> <!-- label -->
   <user12></user12> <!-- pref name -->
   <user13></user13> <!-- pref value i.e. copy -->
   
   <!--
      The default LISTINDEX is sibling() + 1, but if you use 
      that from the first option in the list, then sibling() 
      selects the last sibling -- creating a cyclical refer-
      ence. Specifying a const 0 won't fix it, but specifying 
      a COPY operator with a const 0 will.
      
      A similar problem exists for the Y trait.
      
      So, the first option in the list must have:
      
         <listindex><copy>0</copy></listindex>
         <y><copy>0</copy></y>
      
      AFTER the INCLUDE tag.
   -->

   <clips>&true;</clips>
   <listindex>
      <copy src="sibling()" trait="listindex" />
      <add>1</add>
   </listindex>
   <locus>&true;</locus>
   <x>0</x>
   <y>
      <copy   src="sibling()" trait="height" />
      <onlyifnot>
         <copy src="sibling()" trait="visible" /><eq>&false;</eq>
      </onlyifnot>
      <add    src="sibling()" trait="y" />
   </y>
   <depth>3</depth>
   <width><copy src="parent()" trait="width" /></width>
   <height>
      <copy src="child(label)"      trait="height" />
      <add>8</add>
   </height>
   
   <_mouseover_any>
      <copy src="child(checkbox)" trait="mouseover" />
      <add  src="me()" trait="mouseover" />
      <gt>0</gt>
      <sub>1</sub>
   </_mouseover_any>
   
   <id>&generic;</id>
   <user20>&false;</user20> <!-- button state, set by executable -->
   
   <target><copy src="me()" trait="user1" /></target>
   <clicksound>3</clicksound>
   <xdefault>&true;</xdefault>
   <xlist>&xitem;</xlist>
   <xup>  &prev;</xup>
   <xdown>&next;</xdown>
   <xscroll>
      <copy src="me()" trait="listindex" />
      <sub>
         <copy src="parent()" trait="user8" />
         <div> 2</div>
         <ceil>0</ceil>
      </sub>
      <add>1</add>
   </xscroll>
   
   <_mouseover_any>
      <copy src="me()" trait="mouseover" />
   </_mouseover_any>
   
   <!--
      The _setter and _resetter traits don't hold meaningful values. 
      Rather, they exist solely as a means to run code. The former 
      trait reacts to mouse clicks on the slider and its buttons, 
      computing by how much the current value should change; it then 
      requests that the pref be changed by that value, and then it 
      requests that the pref be clamped to the proper min and max.
      
      The _resetter trait is similar, listening for the user react-
      ing to the Reset To Defaults confirmation prompt and triggering 
      a reset of the pref to its default value at that time.
   -->
   <_setter>
      <copy src="me()" trait="clicked" />
      <xxnOpPrefModifyValue src="me()" trait="user12" />
      <copy>2</copy>
      <xxnOpPrefCarousel src="me()" trait="user12" />
      <!-- Refer to NorthernUI source - UIPrefs.h - for information 
      on why this "carousel" operator exists and is used. -->
   </_setter>
   <_resetter>
      <copy src="menu()" trait="user24" /><eq>1</eq>
      <and>
         <copy src="menu()"   trait="_currentSubmenuID" />
         <eq   src="parent()" trait="_submenuID" />
         <or>
            <copy src="menu()" trait="_usesSubmenus" /><neq>&true;</neq>
         </or>
      </and>
      <xxnOpPrefResetValue src="me()" trait="user12" />
   </_resetter>
   
   <text name="label">
      <depth>-3</depth>
      <clips>&true;</clips>
      <include src="NorthernUI\fonts\normal.xml" />
      <string><copy src="parent()" trait="user11" /></string>
      <alpha>
         <copy>128</copy>
         <max>
            <copy>255</copy>
            <onlyif src="parent()" trait="target" />
         </max>
      </alpha>
      <red>
         <copy>140</copy>
         <max>
            <copy>255</copy>
            <mult src="parent()" trait="_mouseover_any" />
         </max>
      </red>
      <green><copy src="me()" trait="red" /></green>
      <blue> <copy src="me()" trait="red" /></blue>
      <x>0</x>
      <y>
         <copy src="parent()" trait="height" />
         <sub  src="me()"     trait="height" />
         <div>2</div>
      </y>
   </text>
   <image name="checkbox">
      <depth>-1</depth>
      <clips>&true;</clips>
      <zoom>40</zoom>
      <_filename_1>NorthernUI\checkbox\checkbox_cleared.dds</_filename_1>
      <_filename_2>NorthernUI\checkbox\checkbox_checked.dds</_filename_2>
      
      <filename>
         <copy src="parent()" trait="user13" /><eq>&true;</eq>
         <copy src="me()"     trait="_filename_" />
      </filename>
      <x>
         <copy src="parent()" trait="user10" />
         <add>
            <copy src="parent()" trait="width" />
            <sub  src="parent()" trait="user10" />
            <sub  src="me()"     trait="width" />
            <div>2</div>
         </add>
      </x>
      <y>
         <copy src="parent()" trait="height" />
         <sub  src="me()"     trait="height" />
         <div>2</div>
      </y>
      <width> <copy src="me()" trait="filewidth" /></width>
      <height><copy src="me()" trait="fileheight" /></height>
   </image>
<!--</rect>-->