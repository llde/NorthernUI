<!-- hud_main_menu.xml -->
<menu name="HUDMainMenu">
	<class> &HUDMainMenu; </class>
	<stackingtype> &does_not_stack; </stackingtype>
	<alpha>	0 </alpha>
	<locus> &true; </locus>
	<depth> -50 </depth>
	<x> 0 </x>
	<y> 0 </y>
	<menufade> 0.25 </menufade>
	<user1> 2 </user1>
	<user2> 1 </user2>
	<user3> 1 </user3>	<!-- 1 = explore mode / 0 = menu mode -->
	<user4> 1 </user4>	<!-- current mode... 1=stats, 2=inventory, 3=magic, 4=map -->
	<user5> 1 </user5>	<!-- last mode... 1=stats, 2=inventory, 3=magic, 4=map -->
	<user6> 65 </user6>	<!-- player model first zoom percentage... 100=face, 0=full body -->
	
	<!-- Region text -->
	<user7> 0 </user7>	<!-- alpha -->
	<user8> Region name text </user8>
   
   <!-- NorthernUI by DavidJCobb: a Skyrim look-alike UI redesign for Oblivion. -->
   
   <!-- NorthernUI-suggested opacity for HUD.
      Use this to tell when the bars are fading out due to them being full.
      NorthernUI just blindly animates this and we can choose whether and 
      when to use it.
   -->
   <user24>255</user24>
	
	<rect name="player_grab_zone">
		<id> 91 </id>
		<target> &true; </target>
		<alpha> 128 </alpha>
		<x> 0 </x>
		<y> 0 </y>
		<width> <copy src="screen()" trait="width"/> </width>
		<height> <copy src="screen()" trait="height"/> </height>
	</rect>
   
   <rect name="hudmain_gameplay_corestats"> <!-- health/magicka/stamina/equipment -->
      <visible><!-- Show only in "explore mode." --><copy src="HUDMainMenu" trait="user3" /><eq>1</eq></visible>
      <locus>&true;</locus>
      <x><copy src="screen()" trait="cropX" /></x>
      <y>
         <copy src="screen()" trait="height" />
         <sub  src="screen()" trait="cropY" />
         <sub  src="me()"     trait="height" />
         <sub>32</sub>
      </y>
      <width>
         <copy src="screen()" trait="width" />
         <sub>
            <copy src="screen()" trait="cropX" />
            <mult>2</mult>
         </sub>
      </width>
      <height>
         <!-- height if meters are not stacked -->
         <copy src="hudmain_health"  trait="height" />
         <max  src="hudmain_magic"   trait="height" />
         <max  src="hudmain_fatigue" trait="height" />
         <max> <!-- height if meters are stacked -->
            <copy src="hudmain_health"  trait="height" />
            <add  src="hudmain_magic"   trait="height" />
            <add  src="hudmain_fatigue" trait="height" />
            <add>
               <copy src="me()" trait="_spacingY" />
               <mult>2</mult>
            </add>
            <onlyif src="me()" trait="_metersShouldStack" />
         </max>
      </height>
      <_marginX>32</_marginX>
      <_spacingY> <!-- space between meters, if they're stacked -->
         <copy src="hudmain_health"  trait="height" />
         <div>2</div>
      </_spacingY>
      <!-- -->
      <_meterAlpha>
         <copy>255</copy>
         <onlyifnot>
            <copy>&false;</copy>
            <copy src="xxnPrefs()" trait="_NorthernUIFadeHUDCorestatsWhenFull" />
         </onlyifnot>
         <add>
            <copy src="menu()" trait="user24" />
            <onlyif>
               <copy>&false;</copy> <!-- fallback -->
               <copy src="xxnPrefs()" trait="_NorthernUIFadeHUDCorestatsWhenFull" />
            </onlyif>
         </add>
      </_meterAlpha>
      <_meterZoom>
         <copy>100</copy> <!-- fallback -->
         <copy src="xxnPrefs()" trait="_NorthernUISkyHUDScaleCorestats" />
         <max>50</max>
         <div>2</div> <!-- 100% scale -> 50% zoom -->
      </_meterZoom>
      <_meterWidth>
         <copy>320</copy>
         <mult>
            <copy>100</copy> <!-- fallback -->
            <copy src="xxnPrefs()" trait="_NorthernUISkyHUDScaleCorestats" />
            <max>50</max>
         </mult>
         <div>100</div>
      </_meterWidth>
      <_equipWidgetAlpha>
         <copy>255</copy>
         <onlyifnot>
            <copy>&false;</copy>
            <copy src="xxnPrefs()" trait="_NorthernUIFadeHUDEquipWidgetsWhenFull" />
         </onlyifnot>
         <add>
            <copy src="menu()" trait="user24" />
            <onlyif>
               <copy>&false;</copy> <!-- fallback -->
               <copy src="xxnPrefs()" trait="_NorthernUIFadeHUDEquipWidgetsWhenFull" />
            </onlyif>
         </add>
      </_equipWidgetAlpha>
      <!-- -->
      <_meterStackX>
         <!-- Stack on Left -->
         <copy src="parent()" trait="_marginX" />
         <onlyif>
            <copy>1</copy> <!-- fallback -->
            <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
            <eq>2</eq>
         </onlyif>
         <add> <!-- Stack at Center -->
            <copy src="me()" trait="width" />
            <sub  src="hudmain_health" trait="width" />
            <div>2</div>
            <onlyif>
               <copy>1</copy> <!-- fallback -->
               <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
               <eq>3</eq>
            </onlyif>
         </add>
         <add> <!-- Stack on Right -->
            <copy src="me()" trait="width" />
            <sub  src="hudmain_health" trait="width" />
            <sub  src="me()" trait="_marginX" />
            <onlyif>
               <copy>1</copy> <!-- fallback -->
               <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
               <eq>4</eq>
            </onlyif>
         </add>
         <!-- and just for future maintainability's sake: -->
         <onlyif src="me()" trait="_metersShouldStack" />
      </_meterStackX>
      <_metersShouldStack>
         <copy>1</copy> <!-- fallback -->
         <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
         <gt>1</gt>
      </_metersShouldStack>
      <!-- -->
      <_spaceBetweenEquipIconsWhenStacking>8</_spaceBetweenEquipIconsWhenStacking>
      <!-- -->
      <rect name="hudmain_health">
         <id>2</id>
         <include src="NorthernUI\meters\statbar.xml" />
         <depth>1</depth>
         <x>
            <copy src="parent()" trait="width" />
            <sub  src="me()"     trait="width" />
            <div>2</div>
            <onlyifnot src="parent()" trait="_metersShouldStack" />
            <add       src="parent()" trait="_meterStackX" />
         </x>
         <y>0</y>
         <visible><copy src="me()" trait="user0"/><gt>0</gt></visible>
         <_fillImage>Menus\NorthernUI\meters\statbar\hd_fill_health.dds</_fillImage>
         <_fillPercent><copy src="me()" trait="user0" /></_fillPercent>
         
         <user0>1.0</user0> <!-- executable: meter percent -->
         <_alpha><copy src="parent()" trait="_meterAlpha" /></_alpha>
         <zoom> <copy src="parent()" trait="_meterZoom" /></zoom>
         <width><copy src="parent()" trait="_meterWidth" /></width>
      </rect>
      <rect name="hudmain_magic">
         <id>3</id>
         <include src="NorthernUI\meters\statbar.xml" />
         <depth>1</depth>
         <x>
            <copy src="parent()" trait="_marginX" />
            <onlyifnot src="parent()" trait="_metersShouldStack" />
            <add       src="parent()" trait="_meterStackX" />
         </x>
         <y>
            <copy>0</copy>
            <add>
               <copy src="sibling()" trait="y" />
               <add  src="sibling()" trait="height" />
               <add  src="parent()"  trait="_spacingY" />
               <onlyif src="parent()" trait="_metersShouldStack" />
            </add>
         </y>
         <visible><copy src="hudmain_health" trait="user0"/><gt>0</gt></visible>
         <_fillImage>Menus\NorthernUI\meters\statbar\hd_fill_magicka.dds</_fillImage>
         <_fillPercent><copy src="me()" trait="user0" /></_fillPercent>
         
         <user0>1.0</user0> <!-- executable: meter percent -->
         <_alpha><copy src="parent()" trait="_meterAlpha" /></_alpha>
         <zoom> <copy src="parent()" trait="_meterZoom" /></zoom>
         <width><copy src="parent()" trait="_meterWidth" /></width>
      </rect>
      <rect name="hudmain_fatigue">
         <id>4</id>
         <include src="NorthernUI\meters\statbar.xml" />
         <depth>1</depth>
         <x>
            <copy src="parent()" trait="width" />
            <sub  src="me()"     trait="width" />
            <sub  src="parent()" trait="_marginX" />
            <onlyifnot src="parent()" trait="_metersShouldStack" />
            <add       src="parent()" trait="_meterStackX" />
         </x>
         <y>
            <copy>0</copy>
            <add>
               <copy src="sibling()" trait="y" />
               <add  src="sibling()" trait="height" />
               <add  src="parent()"  trait="_spacingY" />
               <onlyif src="parent()" trait="_metersShouldStack" />
            </add>
         </y>
         <visible><copy src="hudmain_health" trait="user0"/><gt>0</gt></visible>
         <_fillImage>Menus\NorthernUI\meters\statbar\hd_fill_stamina.dds</_fillImage>
         <_fillPercent><copy src="me()" trait="user0" /></_fillPercent>
         
         <user0>1.0</user0> <!-- executable: meter percent -->
         <_alpha><copy src="parent()" trait="_meterAlpha" /></_alpha>
         <zoom> <copy src="parent()" trait="_meterZoom" /></zoom>
         <width><copy src="parent()" trait="_meterWidth" /></width>
      </rect>
      <!-- -->
      <image name="hudmain_Magic_Icon"> <!-- equipped spell -->
			<id>6</id>
			<filename>Menus\Icons\icon_hud_default_magic.dds</filename>
			<depth>1</depth>
			<locus>&true;</locus>
         <zoom>
            <copy>100</copy> <!-- fallback -->
            <copy src="xxnPrefs()" trait="_NorthernUISkyHUDScaleWpnSplIcon" />
            <max>25</max>
         </zoom>
         <_size>
            <copy>63</copy>
            <mult src="me()" trait="zoom" />
            <div>100</div>
         </_size>
			<width> <copy src="me()" trait="_size" /></width>
			<height><copy src="me()" trait="_size" /></height>
			<x>
            <!-- Spread Across: align with left edge of magicka bar -->
				<copy src="sibling(hudmain_magic)" trait="x"/>
            <onlyifnot src="parent()" trait="_metersShouldStack" />
            <add> <!-- Stack on Left / Stack on Right -->
               <copy src="hudmain_weapon_charge" trait="width" />
               <div>2</div>
               <add  src="hudmain_weapon_charge" trait="x" />
               <add>
                  <copy src="parent()" trait="_spaceBetweenEquipIconsWhenStacking" />
                  <div>2</div>
               </add>
               <onlyif>
                  <copy>1</copy> <!-- fallback -->
                  <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
                  <eq>2</eq>
                  <or>
                     <copy>1</copy> <!-- fallback -->
                     <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
                     <eq>4</eq>
                  </or>
               </onlyif>
            </add>
            <add> <!-- Stack at Center -->
               <copy src="hudmain_health" trait="x" />
               <sub  src="me()"           trait="width" />
               <sub>8</sub>
               <onlyif>
                  <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" /><eq>3</eq>
               </onlyif>
            </add>
			</x>
			<y>
            <!-- Spread Across: 16 units above baseline -->
            <copy>-16</copy>
            <sub  src="me()" trait="height" />
            <onlyifnot src="parent()" trait="_metersShouldStack" />
            <add> <!-- Stack on Left / Stack On Right -->
               <copy src="hudmain_weapon_charge" trait="y" />
               <sub  src="me()" trait="height" />
               <sub>8</sub>
               <onlyif>
                  <copy>1</copy> <!-- fallback -->
                  <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
                  <eq>2</eq>
                  <or>
                     <copy>1</copy> <!-- fallback -->
                     <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" /><eq>4</eq>
                  </or>
               </onlyif>
            </add>
            <add> <!-- Stack at Center -->
               <copy src="hudmain_fatigue" trait="y" />
               <add  src="hudmain_fatigue" trait="height" />
               <sub  src="me()" trait="height" />
               <onlyif>
                  <copy>1</copy> <!-- fallback -->
                  <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
                  <eq>3</eq>
               </onlyif>
            </add>
         </y>
			<alpha> <!-- dim when the player can't cast -->
            <copy src="parent()" trait="_equipWidgetAlpha" />
            <mult>
               <copy>100</copy>
               <div> 255</div>
               <max>
                  <copy>1</copy>
                  <onlyif src="me()" trait="user2" />
               </max>
            </mult>
			</alpha>
			<user2>&true;</user2> <!-- can cast -->
      </image>
      <image name="hudmain_weapon"> <!-- equipped weapon; tile is referenced by name elsewhere -->
			<id> 5 </id>
			<filename> Menus\Icons\icon_hud_default_weapon.dds </filename>
			<locus>&true;</locus>
			<depth> 1 </depth>
         <zoom>
            <copy>100</copy>
            <copy src="xxnPrefs()" trait="_NorthernUISkyHUDScaleWpnSplIcon" />
            <max>25</max>
         </zoom>
         <_size>
            <copy>63</copy>
            <mult src="me()" trait="zoom" />
            <div>100</div>
         </_size>
			<width> <copy src="me()" trait="_size" /></width>
			<height><copy src="me()" trait="_size" /></height>
			<x>
            <!-- Spread Across: align with right edge of fatigue bar -->
				<copy src="sibling(hudmain_fatigue)" trait="x" />
				<add  src="sibling(hudmain_fatigue)" trait="width" />
				<sub  src="me()" trait="width" />
            <onlyifnot src="parent()" trait="_metersShouldStack" />
            <add> <!-- Stack on Left / Stack on Right -->
               <copy src="hudmain_weapon_charge" trait="width" />
               <div>2</div>
               <add  src="hudmain_weapon_charge" trait="x" />
               <sub src="me()" trait="width" />
               <sub>
                  <copy src="parent()" trait="_spaceBetweenEquipIconsWhenStacking" />
                  <div>2</div>
               </sub>
               <onlyif>
                  <copy>1</copy> <!-- fallback -->
                  <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
                  <eq>2</eq>
                  <or>
                     <copy>1</copy> <!-- fallback -->
                     <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
                     <eq>4</eq>
                  </or>
               </onlyif>
            </add>
            <add> <!-- Stack at Center -->
               <copy src="hudmain_fatigue" trait="x" />
               <add  src="hudmain_fatigue" trait="width" />
               <add>8</add>
               <onlyif>
                  <copy>1</copy> <!-- fallback -->
                  <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
                  <eq>3</eq>
               </onlyif>
            </add>
			</x>
			<y>
            <!-- Spread Across: 16 units above baseline -->
            <copy>-16</copy>
            <sub  src="me()" trait="height" />
            <onlyifnot src="parent()" trait="_metersShouldStack" />
            <add> <!-- Stack on Left / Stack at Center / Stack On Right -->
               <copy src="hudmain_weapon_charge" trait="y" />
               <sub  src="me()" trait="height" />
               <sub>8</sub>
               <onlyif src="parent()" trait="_metersShouldStack" />
            </add>
         </y>
         <alpha> <!-- dim when the weapon is badly damaged -->
            <copy src="parent()" trait="_equipWidgetAlpha" />
            <mult>
               <copy>100</copy>
               <div> 255</div>
               <max>
                  <copy>1</copy>
                  <onlyif>
                     <copy src="me()" trait="user2" />
                     <gte>50</gte>	<!-- weapon health minimum before weapon icon partially alphas out -->
                  </onlyif>
               </max>
            </mult>
			</alpha>
			<!-- Possible item statuses are broken, stolen, enchanted, and poisoned -->
			<user0> 0 </user0>		<!-- status combination -->
			<user1></user1>			<!-- status icon filename -->
			<user2> 1.0 </user2>	<!-- weapon health - 0-100 -->
			<user3> 0 </user3>		<!-- ammo remaining -->
         <user20>-1</user20> <!-- NorthernUI: charge (negative if no enchantment) -->
         <user21>-1</user21> <!-- NorthernUI: remaining uses -->
			<!-- -->
			<image name="hudmain_weapon_status">     <!-- overlaid on weapon icon -->
				<filename><copy src="parent()" trait="user1"/></filename>
				<depth>1</depth>
				<visible>
					<copy src="parent()" trait="user0"/>
					<gt> 0 </gt>
				</visible>
            <zoom><copy src="parent()" trait="zoom" /></zoom>
				<x>0</x>
				<y> <!-- vertically center -->
					<copy src="parent()" trait="height"/>
					<sub  src="me()" trait="height"/>
               <div>2</div>
				</y>
				<height>
					<copy>32</copy>		<onlyif src="me()" trait="_handonly"/>
					<add>
						<copy>24</copy>	<onlyifnot src="me()" trait="_handonly"/>
					</add>
               <mult src="me()" trait="zoom" />
               <div>100</div>
				</height>
				<width>
					<copy>64</copy>
					<sub>
						<copy>32</copy>
						<onlyif>
							<!-- If any of these conditions is true, we are using an original icon,
							     rather than a "combo" dds. -->
							<!-- "Combo" dds's are 32x64, original icons are 32x32 -->
							<copy src="me()" trait="_handonly"/>
							<or> <copy src="parent()" trait="user0"/> <eq>2</eq> </or>
							<or> <copy src="parent()" trait="user0"/> <eq>4</eq> </or>
							<or> <copy src="parent()" trait="user0"/> <eq>8</eq> </or>
						</onlyif>
					</sub>
               <mult src="me()" trait="zoom" />
               <div>100</div>
				</width>
				<red>
					<copy> 47 </copy>
					<onlyifnot src="me()" trait="_handonly"/>
					<add> 208 </add>
				</red>
				<green>
					<copy> 255 </copy>
					<onlyifnot src="me()" trait="_handonly"/>
				</green>
				<blue>
					<copy> 255 </copy>
					<onlyifnot src="me()" trait="_handonly"/>
				</blue>
				<alpha> <copy src="parent()" trait="alpha"/> </alpha>
				<_handonly>
					<copy src="parent()" trait="user0"/>
					<eq> 1 </eq>
				</_handonly>
			</image>
			<text name="hudmain_weapon_ammo">        <!-- overlaid on weapon icon -->
            <include src="NorthernUI\fonts\normal.xml" />
				<visible>
					<copy src="parent()" trait="user3" /><gt>0</gt>
					<and>
						<copy src="HUDMainMenu" trait="user3" /><eq>1</eq>
					</and>
				</visible>
				<x><copy src="parent()" trait="width" /></x>
				<y>
               <copy src="parent()" trait="height" />
               <sub  src="me()"     trait="height" />
            </y>
				<depth> 3 </depth>
				<justify> &right; </justify>
				<font> 3 </font>
				<red>255</red><green>255</green><blue>255</blue><!-- <alpha>255</alpha> -->
				<wrapwidth>55</wrapwidth>
				<wraplines> 1</wraplines>
				<string><copy src="parent()" trait="user3" /></string>
            
            <alpha><copy src="parent()" trait="_equipWidgetAlpha" /></alpha>
			</text>
			<text name="hudmain_weapon_ammo_shadow"> <!-- overlaid on weapon icon -->
            <include src="NorthernUI\fonts\normal.xml" />
				<visible> <copy src="sibling(hudmain_weapon_ammo)" trait="visible"/> </visible>
				<x>
               <copy src="sibling()" trait="x" />
               <add>2</add>
            </x>
				<y>
               <copy src="sibling()" trait="y" />
               <add>2</add>
            </y>
				<depth> 2 </depth>
				<justify> &right; </justify>
				<font> 3 </font>
				<red> 0 </red>
				<green> 0 </green>
				<blue> 0  </blue>
				<!-- <alpha> 192 </alpha> -->
				<wrapwidth> 55 </wrapwidth>
				<wraplines> 1 </wraplines>
				<string><copy src="parent()" trait="user3" /></string>
            
            <alpha>
               <copy src="parent()" trait="_equipWidgetAlpha" />
               <mult>0.75</mult>
            </alpha>
			</text>
		</image>
      <rect name="hudmain_weapon_condition">
         <include src="NorthernUI\meters\generic_upward.xml" />
         <depth>2</depth>
         <x>
            <!-- Spread Across: position with stamina bar -->
            <copy src="hudmain_fatigue" trait="x" />
            <add> <!-- size of a statbar endcap -->
               <copy>55</copy>
               <mult src="hudmain_fatigue" trait="zoom" />
               <div>100</div>
            </add>
            <onlyifnot src="parent()" trait="_metersShouldStack" />
            <add> <!-- Stack on Left / Stack at Center -->
               <copy src="parent()" trait="_meterStackX" />
               <add  src="parent()" trait="_meterWidth" />
               <onlyif>
                  <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" /><eq>2</eq>
                  <or>
                     <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" /><eq>3</eq>
                  </or>
               </onlyif>
            </add>
            <add> <!-- Stack on Right -->
               <copy src="parent()" trait="_meterStackX" />
               <sub  src="me()" trait="width" />
               <onlyif>
                  <copy>1</copy> <!-- fallback -->
                  <copy src="xxnPrefs()" trait="_NorthernUIHUDLayout" />
                  <eq>4</eq>
               </onlyif>
            </add>
         </x>
			<y>
            <!-- Spread Across: 16 units above baseline -->
            <copy>-16</copy>
            <sub  src="me()" trait="height" />
            <onlyifnot src="parent()" trait="_metersShouldStack" />
            <add> <!-- Stack on Left / Stack at Center / Stack On Right -->
               <copy src="hudmain_fatigue" trait="y" />
               <add  src="hudmain_fatigue" trait="height" />
               <sub  src="me()" trait="height" />
               <onlyif src="parent()" trait="_metersShouldStack" />
            </add>
         </y>
         <visible><copy src="hudmain_health" trait="user0"/><gt>0</gt></visible>
         <_fillImage>Menus\NorthernUI\meters\generic_upward\hd_fill_health.dds</_fillImage>
         <_fillPercent><copy src="me()" trait="user0" /></_fillPercent>
         <width>
            <copy src="hudmain_fatigue" trait="width" />
            <sub  src="hudmain_weapon"  trait="width" />
            <sub  src="parent()" trait="_marginX" />
         </width>
         
         <user0>
            <copy src="hudmain_weapon" trait="user2" />
            <div>100</div>
         </user0>
         <zoom>
            <copy>100</copy>
            <copy src="xxnPrefs()" trait="_NorthernUISkyHUDScaleWpnCndMeter" />
            <max>50</max>
            <div>3</div> <!-- 100% scale -> 33% zoom -->
         </zoom>
         <_alpha><copy src="parent()" trait="_equipWidgetAlpha" /></_alpha>
      </rect>
      <rect name="hudmain_weapon_charge">
         <include src="NorthernUI\meters\generic_upward.xml" />
         <depth>1</depth>
         
         <_align> <!-- line the meters up so that their "slopes" match -->
            14
         </_align>
         
         <x>
            <copy src="sibling()" trait="x" />
            <add  src="me()" trait="_align" />
         </x>
			<y> <!-- above condition meter -->
            <copy src="sibling()" trait="y" />
            <sub  src="me()" trait="height" />
            <add> <!-- overlap the meters' outlines -->
               <copy>2</copy>
            </add>
         </y>
         <visible>
            <copy src="hudmain_health" trait="user0"/><gt>0</gt>
            <and>
               <copy src="hudmain_weapon" trait="user20" /><gte>0</gte>
            </and>
         </visible>
         <_fillPercent><copy src="me()" trait="user0" /></_fillPercent>
         <width>
            <copy src="sibling()" trait="width" />
            <sub src="me()" trait="_align" />
            <sub src="me()" trait="_align" />
         </width>
         
         <user0>
            <copy src="hudmain_weapon" trait="user20" />
            <onlyif> <!-- remaining charge is sufficient to actually use the enchantment -->
               <copy src="hudmain_weapon" trait="user21" /> <!-- uses -->
               <gt>0</gt>
            </onlyif>
         </user0>
         <zoom>
            <copy>100</copy> <!-- fallback -->
            <copy src="xxnPrefs()" trait="_NorthernUISkyHUDScaleWpnChgMeter" />
            <max>50</max>
            <div>3</div> <!-- 100% scale -> 33% zoom -->
         </zoom>
         <_alpha><copy src="parent()" trait="_equipWidgetAlpha" /></_alpha>
      </rect>
   </rect>
   <rect name="hudmain_compass">
      <locus>&true;</locus>
      <visible> <!-- Show only in "explore mode." -->
         <copy src="HUDMainMenu" trait="user3" /><eq>1</eq>
      </visible>
      <width>
         <copy>600</copy>
         <add src="xxnPrefs()" trait="_NorthernUISkyHUDWidthModCompass" />
      </width>
      <height><copy src="child(compass_mid)" trait="height" /></height>
      <x>
         <copy src="screen()" trait="width"/>
         <sub  src="me()"     trait="width"/>
         <div>2</div>
      </x>
      <y>32</y>
      <zoom> <!-- graphics scale -->
         <copy>100</copy> <!-- fallback -->
         <copy src="xxnPrefs()" trait="_NorthernUISkyHUDScaleCompass" />
         <max>25</max>
         <!-- 100% scale -> 37% zoom: -->
         <div>
            <copy>100</copy>
            <div>  37</div>
         </div>
      </zoom>
      
      <user0> <!-- width of the "mid" portion of the flex-image -->
         <copy src="child(compass_mid)" trait="width" />
      </user0>
      
      <image name="compass_endcap_l">
         <zoom><copy src="parent()" trait="zoom" /></zoom>
         <filename>Menus\NorthernUI\HUD\compass\hd_endcaps.dds</filename>
         <width>
            <copy src="me()" trait="filewidth" />
            <div>2</div>
         </width>
         <height><copy src="me()" trait="fileheight" /></height>
         <x>0</x>
         <y>0</y>
      </image>
      <image name="compass_endcap_r">
         <zoom><copy src="parent()" trait="zoom" /></zoom>
         <filename>Menus\NorthernUI\HUD\compass\hd_endcaps.dds</filename>
         <width>
            <copy src="me()" trait="filewidth" />
            <div>2</div>
         </width>
         <height><copy src="me()" trait="fileheight" /></height>
         <cropX><copy src="me()" trait="width" /></cropX>
         <x>
            <copy src="parent()" trait="width" />
            <sub  src="me()"     trait="width" />
         </x>
         <y>0</y>
      </image>
      <image name="compass_mid">
         <zoom><copy src="parent()" trait="zoom" /></zoom>
         <filename>Menus\NorthernUI\HUD\compass\hd_mid.dds</filename>
         <width>
            <copy src="compass_endcap_r" trait="x" />
            <sub  src="compass_endcap_l" trait="width" />
         </width>
         <height><copy src="me()" trait="fileheight" /></height>
         <x><copy src="compass_endcap_l" trait="width" /></x>
         <y>0</y>
         <tile>&true;</tile>
      </image>
      
      <rect name="hudmain_compass_window">
         <locus>&true;</locus>
         <id>7</id>
         <alpha>0</alpha>
         <depth>1</depth>
         <width> <copy src="parent()" trait="user0" /></width>
         <height><copy src="parent()" trait="height" /></height>
         <x>
            <copy src="parent()" trait="width" />
            <sub  src="me()"     trait="width" />
            <div>2</div>
         </x>
         <y>
            <copy src="parent()" trait="height" />
            <sub  src="me()"     trait="height" />
            <div>2</div>
         </y>
         <clipwindow>&true;</clipwindow>
         
         <user0>0</user0>		<!-- set by code - heading in degrees, N is 0/360 -->
         
         <!--
            Bethesda used XML-side math to determine the precise relationship 
            between pixels and degrees. We don't do that; rather, the prefab 
            that we use to position items within the compass just assumes 
            that the entire compass span is 180 degrees.
         -->
         
         <rect name="hudmain_compass_heading">
            <id>14</id>
            <depth>3</depth>
            <width>768</width>
            <height><copy src="parent()" trait="height" /></height>
            <clips>&true;</clips> <!-- To debug the compass, set this to false so that the compass contents "overflow." -->
            <locus>&true;</locus>
            <x>0</x>
            <y>
               <copy src="parent()" trait="height" />
               <sub  src="me()"     trait="height" />
            </y>
            <user1>0</user1>	<!-- max icon depth -->
            <user2>0</user2>	<!-- iMapMarkerRevealDistance  (set only when HUDMainMenu is first opened) -->
            <user3>0</user3>	<!-- iMapMarkerVisibleDistance (set only when HUDMainMenu is first opened) -->
            
            <!-- size of the icon in normalized/UI pixels -->
            <_iconDisplaySize>32</_iconDisplaySize>
            
            <!-- 01: Map marker icons, 64px -->
            <_filename_1>Menus\NorthernUI\icons\hd_map.dds</_filename_1>
            <!-- 02: Quest objective marker, 64px -->
            <_filename_2>Menus\NorthernUI\icons\hd_objective_marker.dds</_filename_2>
            <!-- 03: Player custom marker, 64px -->
            <_filename_3>Menus\NorthernUI\icons\hd_custom_marker.dds</_filename_3>
            <!-- 04: You Are Here icon, 32px -->
            <_filename_4>Menus\Map\world_map_arrow_icon.dds</_filename_4>
            <!-- 05: Quest objective door marker, 64px -->
            <_filename_5>Menus\NorthernUI\icons\hd_objective_door_marker.dds</_filename_5>

            <!--
               NOTE:
               
               HUDMainMenu regenerates the compass icons every frame. It does not 
               destroy all tiles and then create new ones; rather, it recycles 
               existing tiles until it has exhausted all of them; if at that point 
               there are still map markers to render, then it starts creating new 
               tiles. The menu never deletes tiles from the compass; if there are 
               more tiles than there are map markers to display, then the extra 
               tiles have their <visible/> trait set to false.
               
               As far as HUDMainMenu is concerned, every child of the tile with 
               ID #14 (hudmain_compass_heading in this file) is a map marker. Any 
               XML elements preplaced in this tile will therefore be cannibalized 
               and repurposed as a map marker if there are enough map markers to 
               warrant doing so, or be forcibly hidden otherwise.
               
               If you wish to put content in the compass and have it display 
               inline with map markers, that content therefore cannot be inside 
               of this specific tile.
            -->

            <template name="hudmain_compass_icon">
               <image name="hudmain_compass_icon">
                  <_renderedWidth>
                     <copy src="me()" trait="width" />
                     <mult> <!-- convert from UI pixels to absolute pixels -->
                        <copy src="NorthernUI()" trait="_xxnUIPixelScale" />
                        <add> <!-- failsafe if scale value is undefined -->
                           <copy>1</copy>
                           <onlyif>
                              <copy src="NorthernUI()" trait="_xxnUIPixelScale" /><eq>0</eq>
                           </onlyif>
                        </add>
                     </mult>
                  </_renderedWidth>
                  <_fileIndex>
                     <copy src="me()" trait="user6"/>
                     <onlyif>
                        <copy src="me()" trait="user5"/><eq>99</eq>
                     </onlyif>
                     <add>
                        <copy>3</copy>
                        <onlyif>
                           <copy src="me()" trait="user5" /><eq>98</eq>
                        </onlyif>
                     </add>
                     <add>1</add>
                     <max>
                        <copy>5</copy>
                        <onlyif src="me()" trait="user11" />
                        <onlyif src="me()" trait="user10" />
                     </max>
                  </_fileIndex>
                  <_iconSourceSize>64</_iconSourceSize> <!-- pixel size of the icon within its file -->
                  <_prefScale>
                     <copy src="xxnPrefs()" trait="_NorthernUISkyHUDScaleCompass" />
                     <max>25</max>
                  </_prefScale>
                  <!-- -->
                  <filename>
                     <copy src="me()"     trait="_fileIndex"/>
                     <copy src="parent()" trait="_filename_"/>
                  </filename>
                  <zoom>
                     <copy src="me()" trait="_prefScale" />
                     <mult>
                        <copy src="parent()" trait="_iconDisplaySize" />
                        <div  src="me()"     trait="_iconSourceSize" />
                     </mult>
                  </zoom>
                  <cropx>
                     <copy src="me()" trait="user5" /> <!-- X: location type -->
                     <sub>1</sub>
                     <mult src="me()" trait="_iconSourceSize" />
                     <onlyif> <!-- exclude special-case locations -->
                        <copy src="me()" trait="user5"/><lt>90</lt>
                     </onlyif>
                     <mult src="me()" trait="zoom" />
                     <div>100</div>
                  </cropx>
                  <cropy>
                     <copy src="me()" trait="user6" /> <!-- Y: fast-travel -->
                     <sub>1</sub>
                     <mult src="me()" trait="_iconSourceSize" />
                     <onlyif> <!-- exclude special-case locations -->
                        <copy src="me()" trait="user5"/><lt>90</lt>
                     </onlyif>
                     <mult src="me()" trait="zoom" />
                     <div>100</div>
                  </cropy>
                  <depth>2</depth>
                  <alpha>
                     <!--
                        The vanilla executable overwrites this for quest markers, but 
                        that's a bug and can break the tile's alpha if it later gets 
                        repurposed as a non-quest marker. NorthernUI patches the game 
                        to avoid overwriting the alpha trait directly.
                     -->
                     <copy>255</copy>
                     <mult src="me()" trait="_distance" />
                     <max>
                        <copy>255</copy>
                        <onlyifnot src="me()" trait="user9" />
                     </max>
                     <max> <!-- force full opacity for quest and custom waypoints -->
                        <copy>255</copy>
                        <onlyif>
                           <copy src="me()" trait="user11" />
                           <or   src="me()" trait="user12" />
                        </onlyif>
                     </max>
                  </alpha>
                  <width>
                     <copy src="parent()" trait="_iconDisplaySize" />
                     <mult src="me()"     trait="_prefScale" />
                     <div>100</div>
                  </width>
                  <height>
                     <copy src="parent()" trait="_iconDisplaySize" />
                     <mult src="me()"     trait="_prefScale" />
                     <div>100</div>
                  </height>

                  <_distance>
                     <copy>1</copy>
                     <sub>
                        <copy src="me()"     trait="user1" />
                        <sub  src="parent()" trait="user2" /> <!-- min reveal distance -->
                        <div>
                           <copy src="parent()" trait="user3" /> <!-- max visible distance -->
                           <sub  src="parent()" trait="user2" /> <!-- min reveal distance -->
                        </div>
                        <min>1</min>
                        <max>0</max>
                     </sub>
                  </_distance>
                  <user0>       0 </user0> <!-- heading to icon (0-360) -->
                  <user1>      30 </user1> <!-- distance to icon in feet; not set for quest markers or player custom markers -->
                  <user2>  &true; </user2> <!-- unused if true -->
                  <user5>       0 </user5> <!-- location type; types >= 90 are sentinel values -->
                  <user6> &false; </user6> <!-- fast travel enabled -->
                  <user9>  &true; </user9> <!-- is a map marker, NOT a quest marker or custom waypoint -->
                  <user10>&false;</user10> <!-- is through load door -->
                  <user11>&false;</user11> <!-- is a quest target -->
                  <user12>&false;</user12> <!-- is the player marker -->
                  
                  <!--
                     User9 is true for actual map markers, false for quest markers, and 
                     false for player custom waypoints.
                  -->
                  
                  <!--
                     If User5 == 98, then the icon is the you-are-here marker. (Redundant 
                     with User12?)
                  
                     If User5 == 99, then the icon is a quest waypoint or placed waypoint, 
                     and the User6 bool indicates the latter.
                  -->
                  
                  <!-- This prefab handles the position of the icon. -->
                  <include src="NorthernUI\hud_compass_entity.xml" />
                  <user16><copy src="hudmain_compass_window" trait="user0" /> </user16>
                  <user18><copy src="hudmain_compass_window" trait="width" /> </user18>
               </image>
            </template>
         </rect>
         <rect name="compass_markings_clip">
            <clips>&true;</clips>
            <locus>&true;</locus>
            <depth>1</depth>
            <x><copy src="sibling()" trait="x" /></x>
            <y><copy src="sibling()" trait="y" /></y>
            <width> <copy src="sibling()" trait="width" /></width>
            <height><copy src="parent()" trait="height" /></height>
            
            <user16><copy src="hudmain_compass_window" trait="user0" /> </user16>
            <user18><copy src="hudmain_compass_window" trait="width" /> </user18>
            
            <text name="north">
               <include src="NorthernUI\fonts\normal.xml" />
               <red>255</red><green>255</green><blue>255</blue>
               <include src="NorthernUI\hud_compass_entity.xml" />
               <user16><copy src="parent()" trait="user16" /></user16>
               <user18><copy src="parent()" trait="user18" /></user18>
               <string>N</string>
               <user0>  0</user0>
            </text>
            <text name="northeast">
               <include src="NorthernUI\fonts\normal.xml" />
               <red>255</red><green>255</green><blue>255</blue>
               <include src="NorthernUI\hud_compass_entity.xml" />
               <user16><copy src="parent()" trait="user16" /></user16>
               <user18><copy src="parent()" trait="user18" /></user18>
               <string>NE</string>
               <user0> 45</user0>
            </text>
            <text name="east">
               <include src="NorthernUI\fonts\normal.xml" />
               <red>255</red><green>255</green><blue>255</blue>
               <include src="NorthernUI\hud_compass_entity.xml" />
               <user16><copy src="parent()" trait="user16" /></user16>
               <user18><copy src="parent()" trait="user18" /></user18>
               <string>E</string>
               <user0> 90</user0>
            </text>
            <text name="southeast">
               <include src="NorthernUI\fonts\normal.xml" />
               <red>255</red><green>255</green><blue>255</blue>
               <include src="NorthernUI\hud_compass_entity.xml" />
               <user16><copy src="parent()" trait="user16" /></user16>
               <user18><copy src="parent()" trait="user18" /></user18>
               <string>SE</string>
               <user0>135</user0>
            </text>
            <text name="south">
               <include src="NorthernUI\fonts\normal.xml" />
               <red>255</red><green>255</green><blue>255</blue>
               <include src="NorthernUI\hud_compass_entity.xml" />
               <user16><copy src="parent()" trait="user16" /></user16>
               <user18><copy src="parent()" trait="user18" /></user18>
               <string>S</string>
               <user0>180</user0>
            </text>
            <text name="southwest">
               <include src="NorthernUI\fonts\normal.xml" />
               <red>255</red><green>255</green><blue>255</blue>
               <include src="NorthernUI\hud_compass_entity.xml" />
               <user16><copy src="parent()" trait="user16" /></user16>
               <user18><copy src="parent()" trait="user18" /></user18>
               <string>SW</string>
               <user0>225</user0>
            </text>
            <text name="west">
               <include src="NorthernUI\fonts\normal.xml" />
               <red>255</red><green>255</green><blue>255</blue>
               <include src="NorthernUI\hud_compass_entity.xml" />
               <user16><copy src="parent()" trait="user16" /></user16>
               <user18><copy src="parent()" trait="user18" /></user18>
               <string>W</string>
               <user0>270</user0>
            </text>
            <text name="northwest">
               <include src="NorthernUI\fonts\normal.xml" />
               <red>255</red><green>255</green><blue>255</blue>
               <include src="NorthernUI\hud_compass_entity.xml" />
               <user16><copy src="parent()" trait="user16" /></user16>
               <user18><copy src="parent()" trait="user18" /></user18>
               <string>NW</string>
               <user0>315</user0>
            </text>
         </rect>
      </rect>
   </rect>
   <text name="hudmain_region">
		<x>
			<!-- <copy src="screen()" trait="width" />
			<sub  src="me()"     trait="width" />
			<div>2</div> -->
         <copy src="screen()" trait="width" />
			<add  src="me()"     trait="width" /> <!-- compensate for right-alignment -->
			<div>2</div>
		</x>
		<y>
			<copy src="hudmain_compass" trait="y" />
			<add  src="hudmain_compass" trait="height" />
         <add>8</add>
		</y>
      <include src="NorthernUI\fonts\normal-shadowed.xml" />
      <justify>&right;</justify> <!-- the damn executable forces this to &right;! -->
		<string><copy src="HUDMainMenu" trait="user8" /></string>
		<red>140</red>
		<green>140</green>
		<blue>140</blue>
		<alpha><copy src="HUDMainMenu" trait="user7" /></alpha>
	</text>
   <rect name="hudmain_menu_selector">
      <visible> <!-- only in menu mode -->
         <copy src="HUDMainMenu" trait="user3" />
         <eq>0</eq>
      </visible>
      <locus>&true;</locus>
      <x><copy src="NorthernUI()" trait="_xxnMainMenuXOffset" /></x>
      <y>0</y>
      <width>745</width>
      <height><copy src="child()" trait="height" /></height>
      <depth> <!-- Reset this element and its descendants to the global 0 depth. -->
         <copy src="HUDMainMenu" trait="depth" />
         <mult>-1</mult>
         <max>0</max>
      </depth>
      
      <_tabSpacing>
         <copy src="me()" trait="width" />
         <sub>
            <copy src="child(tab_stats)" trait="width" />
            <add  src="child(tab_items)" trait="width" />
            <add  src="child(tab_magic)" trait="width" />
            <add  src="child(tab_map)"   trait="width" />
            <add>
               <copy>8</copy> <!-- padding -->
               <mult>2</mult>
            </add>
         </sub>
         <div>
            <copy>3</copy> <!-- tab count - 1 -->
            <add> 2 </add> <!-- to center the tabs, 2; else 0 -->
         </div>
      </_tabSpacing>
      
      <_fontType_1><copy src="NorthernUI()" trait="_fontLarge" /></_fontType_1>
      <_fontType_2><copy src="NorthernUI()" trait="_fontMediumLargeUpper" /></_fontType_2>
      <_fontPath>
         <copy src="xxnLocalization()" trait="_big4TabUseSmallerHeaders" />
         <eq>&true;</eq>
         <copy src="me()" trait="_fontType_" />
      </_fontPath>
      
      <_labelOffsetTop>
         <copy>5</copy>
         <add>
            <copy>5</copy>
            <onlyif>
               <copy src="xxnLocalization()" trait="_big4TabUseSmallerHeaders" />
               <eq>&true;</eq>
            </onlyif>
         </add>
      </_labelOffsetTop>
      
      <rect name="tab_stats">
         <locus>&true;</locus>
         <target>&true;</target>
         <id>9</id>
         <x>
            <copy>8</copy> <!-- padding -->
            <add  src="parent()"  trait="_tabSpacing" />
         </x>
         <y>0</y>
         <depth>5</depth>
         <width><copy src="child(text)" trait="width" /></width>
         <height>
            <copy src="child(text)" trait="height" />
            <add>8</add>
            <add>
               <copy>14</copy>
               <onlyif>
                  <copy src="xxnLocalization()" trait="_big4TabUseSmallerHeaders" />
                  <eq>&true;</eq>
               </onlyif>
            </add>
         </height>
         <_selected>
            <copy src="HUDMainMenu" trait="user4" />
            <add>8</add>
            <eq   src="me()" trait="id"/>
         </_selected>
         <!-- -->
         <text name="text">
            <string><copy src="xxnStrings()" trait="_statsMenuTitle" /></string>
            <x>0</x>
            <y><copy src="hudmain_menu_selector" trait="_labelOffsetTop" /></y>
            <xxnFontPath><copy src="hudmain_menu_selector" trait="_fontPath" /></xxnFontPath>
            <red>
               <copy>140</copy>
               <max>
                  <copy>255</copy>
                  <onlyif src="parent()" trait="_selected" />
               </max>
            </red>
            <green><copy src="me()" trait="red" /></green>
            <blue> <copy src="me()" trait="red" /></blue>
         </text>
      </rect>
      <rect name="tab_items">
         <locus>&true;</locus>
         <target>&true;</target>
         <id>10</id>
         <x>
            <copy src="sibling()" trait="x" />
            <add  src="sibling()" trait="width" />
            <add  src="parent()"  trait="_tabSpacing" />
         </x>
         <y>0</y>
         <depth>5</depth>
         <width> <copy src="child(text)" trait="width" /></width>
         <height><copy src="sibling()"   trait="height" /></height>
         <_selected>
            <copy src="HUDMainMenu" trait="user4" />
            <add>8</add>
            <eq   src="me()" trait="id"/>
         </_selected>
         <!-- -->
         <text name="text">
            <string><copy src="xxnStrings()" trait="_inventoryMenuTitle" /></string>
            <x>0</x>
            <y><copy src="hudmain_menu_selector" trait="_labelOffsetTop" /></y>
            <xxnFontPath><copy src="hudmain_menu_selector" trait="_fontPath" /></xxnFontPath>
            <red>
               <copy>140</copy>
               <max>
                  <copy>255</copy>
                  <onlyif src="parent()" trait="_selected" />
               </max>
            </red>
            <green><copy src="me()" trait="red" /></green>
            <blue> <copy src="me()" trait="red" /></blue>
         </text>
      </rect>
      <rect name="tab_magic">
         <locus>&true;</locus>
         <target>&true;</target>
         <id>11</id>
         <x>
            <copy src="sibling()" trait="x" />
            <add  src="sibling()" trait="width" />
            <add  src="parent()"  trait="_tabSpacing" />
         </x>
         <y>0</y>
         <depth>5</depth>
         <width> <copy src="child(text)" trait="width" /></width>
         <height><copy src="sibling()"   trait="height" /></height>
         <_selected>
            <copy src="HUDMainMenu" trait="user4" />
            <add>8</add>
            <eq   src="me()" trait="id"/>
         </_selected>
         <!-- -->
         <text name="text">
            <string><copy src="xxnStrings()" trait="_magicMenuTitle" /></string>
            <x>0</x>
            <y><copy src="hudmain_menu_selector" trait="_labelOffsetTop" /></y>
            <xxnFontPath><copy src="hudmain_menu_selector" trait="_fontPath" /></xxnFontPath>
            <red>
               <copy>140</copy>
               <max>
                  <copy>255</copy>
                  <onlyif src="parent()" trait="_selected" />
               </max>
            </red>
            <green><copy src="me()" trait="red" /></green>
            <blue> <copy src="me()" trait="red" /></blue>
         </text>
      </rect>
      <rect name="tab_map">
         <locus>&true;</locus>
         <target>&true;</target>
         <id>12</id>
         <x>
            <copy src="sibling()" trait="x" />
            <add  src="sibling()" trait="width" />
            <add  src="parent()"  trait="_tabSpacing" />
         </x>
         <y>0</y>
         <depth>5</depth>
         <width> <copy src="child(text)" trait="width" /></width>
         <height><copy src="sibling()"   trait="height" /></height>
         <_selected>
            <copy src="HUDMainMenu" trait="user4" />
            <add>8</add>
            <eq   src="me()" trait="id"/>
         </_selected>
         <!-- -->
         <text name="text">
            <string><copy src="xxnStrings()" trait="_mapMenuTitle" /></string>
            <x>0</x>
            <y><copy src="hudmain_menu_selector" trait="_labelOffsetTop" /></y>
            <xxnFontPath><copy src="hudmain_menu_selector" trait="_fontPath" /></xxnFontPath>
            <red>
               <copy>140</copy>
               <max>
                  <copy>255</copy>
                  <onlyif src="parent()" trait="_selected" />
               </max>
            </red>
            <green><copy src="me()" trait="red" /></green>
            <blue> <copy src="me()" trait="red" /></blue>
         </text>
      </rect>
   </rect>
   <image name="hudmain_Levelup_Icon">
      <id>18</id>
      <filename> Menus\Icons\icon_level_up.dds </filename>
      <depth> 1 </depth>
      <locus> &true; </locus>
      <width> 63 </width>
      <height> 63 </height>
      <visible> &false; </visible>
      <x>
         <copy src="screen()" trait="width" />
         <sub  src="screen()" trait="cropx" />
         <sub>32</sub>
         <sub> <!-- center below XXNHUDClockMenu graphic -->
            <copy src="NorthernUI()" trait="_xxnClockImageFilewidth" />
            <sub  src="me()" trait="width" />
            <div>2</div>
         </sub>
         <sub  src="me()" trait="width" />
      </x>
      <y>
         <copy>32</copy>
         <add> <!-- XXNHUDClockMenu - image height -->
            <copy>221</copy>
            <mult src="northernui()" trait="_xxnClockImageScale" />
            <div>100</div>
         </add>
         <add> <!-- XXNHUDClockMenu - text height (assuming same font as our region text) -->
            <copy src="hudmain_region" trait="height" />
            <mult>2</mult>
            <add>4</add>
         </add>
         <onlyif>
            <copy src="HUDMainMenu" trait="user3" /><eq>1</eq>
            <and src="NorthernUI()" trait="_xxnShowHUDClock" />
         </onlyif>
         <add>16</add> <!-- spacing -->
      </y>
   </image>
	<rect name="active_effects">
		<id>16</id>
      <locus>&true;</locus>
		<x>
         <copy src="screen()" trait="width" />
         <sub  src="screen()" trait="cropx" />
         <sub>32</sub>
         <sub> <!-- center below XXNHUDClockMenu graphic -->
            <copy src="NorthernUI()" trait="_xxnClockImageFilewidth" />
            <sub  src="me()" trait="width" />
            <div>2</div>
         </sub>
         <sub  src="me()" trait="width" />
		</x>
		<y>
         <copy   src="sibling()" trait="height" />
			<add>32</add>
         <onlyif src="sibling()" trait="visible" />
         <add    src="sibling()" trait="y" />
		</y>
		
		<_icon_width> 63</_icon_width>
		<_icon_height>63</_icon_height>
		<_buffer>16</_buffer>
		<_icons_per_row>2</_icons_per_row>
      
      <width>
         <copy src="me()" trait="_icon_width" />
         <mult src="me()" trait="_icons_per_row" />
         <add>
            <copy src="me()" trait="_icons_per_row" />
            <sub>1</sub>
            <mult src="me()" trait="_buffer" />
         </add>
      </width>
      <_realWidth>
         <copy src="me()" trait="childcount" />
         <min  src="me()" trait="_icons_per_row" />
         <mult src="me()" trait="_icon_width" />
         <add>
            <copy src="me()" trait="childcount" />
            <min  src="me()" trait="_icons_per_row" />
            <sub>1</sub>
            <mult src="me()" trait="_buffer" />
         </add>
      </_realWidth>
	</rect>
	
	<template name="icon_template">
		<image name="effect_icon">
			<locus> &true; </locus>
			<user0></user0>		<!-- index; starts at zero -->
			<user1></user1>		<!-- time left; negative for constant effects -->
			<width> <copy src="active_effects" trait="_icon_width" /></width>
			<height><copy src="active_effects" trait="_icon_height" /></height>
			<x>
				<copy>0</copy> <!-- starting x pos -->
				<add>
					<copy src="active_effects" trait="_icon_width"/>
					<add  src="active_effects" trait="_buffer"/>				<!-- move left by icon width + buffer -->
					<mult>													<!-- how many times = index % max-per-row -->
						<copy src="me()" trait="user0"/>
						<mod src="active_effects" trait="_icons_per_row"/>
					</mult>
				</add>
            <add> <!-- if not enough icons to fill the row, center them -->
               <copy src="active_effects" trait="width" />
               <sub  src="active_effects" trait="_realWidth" />
               <div>2</div>
            </add>
			</x>
			<y>
				<copy>0</copy> <!-- starting y pos -->
				<add>
					<copy src="me()" trait="user0"/>						<!-- index/icons_per_row gives you -->
					<div src="active_effects" trait="_icons_per_row"/>			<!-- row num plus a fraction -->
					<sub>
						<copy src="me()" trait="user0"/>					<!-- subtract the fraction -->
						<mod src="active_effects" trait="_icons_per_row"/>
						<div src="active_effects" trait="_icons_per_row"/>
					</sub>
					<mult>													<!-- multiply row num by num pixels -->
						<copy src="active_effects" trait="_icon_height"/>
						<add src="active_effects" trait="_buffer"/>
					</mult>
				</add>
			</y>
			<nif name="icon_timer">
				<id> 17 </id>
				<depth> 1 </depth>
				<filename> Enemy Health Bar\Health_Bar01.NIF </filename>
				<visible>
					<copy src="parent()" trait="alpha"/>
					<eq> 255 </eq>
					<and>
						<copy src="parent()" trait="user1"/>	<!-- time left < 0 for constant effects -->
						<gte>0</gte>
					</and>
				</visible>
				<x> 30 </x>
				<y> 0 </y>
				<animation> Health_Bar </animation>
			</nif>
		</image>
	</template>
	
   
   <!-- ===== GAME CRASHES ON LOAD IF SOME OF THESE ARE MISSING: ====== -->
   
   <rect name="warning_the_game_will_crash_if_these_are_removed">
      <visible>&false;</visible>
      <image name="hudmain_background">
         <id> 1 </id>
         <filename> Menus\HUD\hud_back.dds </filename>
         <depth> 55 </depth>
         <alpha>
            <copy src="HUDMainMenu" trait="user3"/>
            <eq> 0 </eq>
            <sub> 1 </sub>
            <mul> 255 </mul>
         </alpha>
         <width> 620 </width>
         <height> 70 </height>
         <locus> &true; </locus>
         <x>
            <copy src="screen()" trait="cropx"/>
            <add src="screen()" trait="cropx"/>
            <sub> 60 </sub>
            <max src="screen()" trait="cropx"/>
            <add> 67 </add>
         </x>
         <y>
            <copy src="screen()" trait="height"/>
            <sub src="screen()" trait="cropy"/>
            <sub src="screen()" trait="cropy"/>
            <sub src="me()" trait="height"/>
         </y>
         <image name="hudmain_frame">
            <id>8</id>
            <filename> Menus\HUD\hud_frame.dds </filename>
            <depth> 18 </depth>
            <visible> <copy src="HUDMainMenu" trait="user3"/> </visible>
            <width> 761 </width>
            <height> 90 </height>
            <x> -70 </x>
            <y> -5 </y>
            <user0>135</user0>
            <locus>&true;</locus>
         </image>
         <nif name="hudmain_brackets"> 
            <id> 20 </id>
            <filename> hud_brackets\A_B_C_D_seq.NIF </filename>
            <depth> 37 </depth>
            <locus> &true; </locus>
            <alpha> 255 </alpha>
            <x> -20 </x>
            <y> -12 </y>
            <user1> 1 </user1>
            <user2>-1.0</user2>
            <visible>
               <copy src="HUDMainMenu" trait="user3"/>
               <eq> 0 </eq>
            </visible>
            <animation>
               <copy src="HUDMainMenu" trait="user5"/>		<!-- get the last mode -->
               <mult> 10 </mult>						<!-- make it the tens digit -->
               <add src="HUDMainMenu" trait="user4"/>			<!-- make the current mode the ones digit -->
               <copy src="me()" trait="_animation_"/>	<!-- use animation trait that ends in that number -->
            </animation>
            <_animation_12> A_B </_animation_12>
            <_animation_13> A_C </_animation_13>
            <_animation_14> A_D </_animation_14>
            <_animation_21> B_A </_animation_21>
            <_animation_23> B_C </_animation_23>
            <_animation_24> B_D </_animation_24>
            <_animation_31> C_A </_animation_31>
            <_animation_32> C_B </_animation_32>
            <_animation_34> C_D </_animation_34>
            <_animation_41> D_A </_animation_41>
            <_animation_42> D_B </_animation_42>
            <_animation_43> D_C </_animation_43>
         </nif>
      </image>
   </rect>
</menu>
